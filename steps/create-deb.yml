steps:
- task: DownloadBuildArtifacts@0
  inputs:
    artifactName: 'imobiledevice-net'
  displayName: 'Download source artifacts'
- task: DownloadBuildArtifacts@0
  inputs:
    artifactName: 'sources'
  displayName: 'Download imobiledevice-net artifacts'
- script: |
    sudo apt-get update
    sudo DEBIAN_FRONTEND=noninteractive apt-get install -y libusb-1.0-0-dev libreadline-dev libcurl4-openssl-dev libssl-dev pkg-config libjs-jquery libglib2.0-dev libtasn1-6-dev udev systemd libxml2-dev
    sudo DEBIAN_FRONTEND=noninteractive apt-get install -y libxml2-utils devscripts debhelper dh-autoreconf dput doxygen chrpath
    sudo DEBIAN_FRONTEND=noninteractive apt-get install -y cython3 python3-all-dev dh-python
    sudo DEBIAN_FRONTEND=noninteractive apt-get install -y libzip-dev
  displayName: 'Install dependencies'
- script: |
    set -e
    version_number=`xmllint --xpath 'Project/PropertyGroup/MobileDeviceDotNetNuGetVersion/text()' $SYSTEM_ARTIFACTSDIRECTORY/imobiledevice-net/Directory.Build.props`

    mkdir -p $BUILD_ARTIFACTSTAGINGDIRECTORY/deb/

    export DEBEMAIL="frederik.carlier@quamotion.mobi"
    export DEBFULLNAME="Frederik Carlier"

    cd $SYSTEM_ARTIFACTSDIRECTORY/sources/

    declare -A package_versions
    package_versions=( ["libplist"]="2.2.1" ["libusbmuxd"]="2.0.3" ["libimobiledevice"]="1.3.1" ["usbmuxd"]="1.1.2" ["libideviceactivation"]="1.1.2" ["ideviceinstaller"]="1.1.3" ["ios-webkit-debug-proxy"]="1.8.6")

    for package in libplist libusbmuxd libimobiledevice usbmuxd libideviceactivation ideviceinstaller ios-webkit-debug-proxy
    do
        package_version=${package_versions[$package]}
        mkdir $package
        tar xvf $package.orig.tar.gz -C .
        mv $package.orig.tar.gz ${package}_${package_version}-${version_number}.orig.tar.gz
        cd $package

        cp -r $BUILD_SOURCESDIRECTORY/deb/${package}/debian .

        dch -v "${package_version}-${version_number}-0$DIST" --distribution $DIST "imobiledevice-net ${version_number}"

        debuild -uc -us
        debuild -S -uc -us

        cd ..

        if [ "$package" != "ios-webkit-debug-proxy" ]
        then
          sudo dpkg -i $package*.deb
        fi
    done

    cp *.* $BUILD_ARTIFACTSTAGINGDIRECTORY/deb/
  displayName: Build Debian archives
- task: PublishBuildArtifacts@1
  inputs:
    pathtoPublish: '$(Build.ArtifactStagingDirectory)/deb' 
    artifactName: 'deb' 
    publishLocation: 'Container'
  displayName: Publish
